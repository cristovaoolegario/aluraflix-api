name: CI

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Download module dependencies
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -coverprofile=coverage.txt ./...

      - name: Upload Coverage
        uses: codecov/codecov-action@v2.1.0
        continue-on-error: true
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
          fail_ci_if_error: false

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the stack
        run: docker-compose up -d

      - name: Run API Tests
        id: run-newman
        uses: anthonyvscode/newman-action@v1
        with:
          collection: Aluraflix.postman_collection.json
          reporters: cli

      - name: Output summary to console
        run: echo ${{ steps.run-newman.outputs.summary }}

  generate-tag:
    needs:
      - build-and-test
      - integration-tests
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.step_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Bump version and push tag
        id: step_tag
        uses: anothrNick/github-tag-action@1.39.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
          WITH_V: true
      - name: Get the version of tag
        id: get_version
        run: |
          echo ${{steps.step_tag.outputs.new_tag}}

  docker-image:
    needs:
      - generate-tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v2.7.0
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/aluraflix-api:latest,
            ${{ secrets.DOCKERHUB_USERNAME }}/aluraflix-api:${{needs.generate-tag.outputs.new_tag}}
  goreleaser:
    needs:
      - generate-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
          workdir: ./cmd/aluraflix-api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
